{"ast":null,"code":"export const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'add':\n      return [...state, action.payload];\n\n    case 'delete':\n      return state.filter(t => t.id !== action.payload);\n\n    case 'toggle-old':\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else return todo;\n      });\n\n    case 'toggle':\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/edgar/source/repos/react/05-hooks-app/src/Components/08-useReducer/todoReducer.js"],"names":["todoReducer","state","action","type","payload","filter","t","id","map","todo","done"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAAEC,KAAK,GAAG,EAAV,EAAcC,MAAd,KAA0B;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CAAE,GAAGF,KAAL,EAAYC,MAAM,CAACE,OAAnB,CAAP;;AAEJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACI,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACE,OAAlC,CAAP;;AAEJ,SAAK,YAAL;AACI,aAAOH,KAAK,CAACO,GAAN,CAAWC,IAAI,IAAI;AACtB,YAAIA,IAAI,CAACF,EAAL,KAAYL,MAAM,CAACE,OAAvB,EAA+B;AAC3B,iBAAO,EACH,GAAGK,IADA;AAEHC,YAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAFT,WAAP;AAIH,SALD,MAMI,OAAOD,IAAP;AACP,OARM,CAAP;;AAUJ,SAAK,QAAL;AACI,aAAOR,KAAK,CAACO,GAAN,CAAWC,IAAI,IAChBA,IAAI,CAACF,EAAL,KAAYL,MAAM,CAACE,OAArB,GACQ,EAAE,GAAGK,IAAL;AAAWC,QAAAA,IAAI,EAAE,CAACD,IAAI,CAACC;AAAvB,OADR,GAEMD,IAHH,CAAP;;AAMJ;AACI,aAAOR,KAAP;AA1BR;AA6BH,CA/BM","sourcesContent":["export const todoReducer = ( state = [], action ) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [ ...state, action.payload ];\r\n\r\n        case 'delete':\r\n            return state.filter(t => t.id !== action.payload);\r\n\r\n        case 'toggle-old':\r\n            return state.map( todo => {\r\n                if (todo.id === action.payload){\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                }else\r\n                    return todo;\r\n            })\r\n\r\n        case 'toggle':\r\n            return state.map( todo => \r\n                ( todo.id === action.payload )\r\n                    ?   { ...todo, done: !todo.done }    \r\n                    : todo\r\n            )\r\n                        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}