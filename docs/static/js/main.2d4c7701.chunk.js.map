{"version":3,"sources":["Components/Categories/CategoryAdd.js","Helpers/Gifs/getGifs.js","Components/Gifs/GifGridItem.js","Components/Gifs/GifGrid.js","Hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","setCategories","find","c","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAYE,GACZC,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,YAAY,WACZC,SApBc,SAACP,GAAO,IACtBK,EAAUL,EAAEQ,OAAZH,MACRP,EAAcO,S,8BCRTI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,iDAAf,UACI,oBAAIA,UAAU,eAAd,SACKJ,IAEL,qBAAKK,IAAKf,EAAKgB,IAAKN,EAAOI,UAAU,sBCJpCG,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAACpB,IAEGqB,EDjB2BK,CAAa1B,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAEtB,OACI,gCACI,6BACKpB,IAEJoB,GAAW,wCACZ,qBAAKJ,UAAU,SAAf,SAEQH,EAAOJ,KACH,SAAAC,GAAG,OAEC,wBAAC,EAAD,2BACQA,GADR,IAEIiB,IAAKjB,EAAIC,eEiB1BiB,EAjCO,WAAO,IAAD,EACY1C,mBAAS,CAAC,kBADtB,mBACjB2C,EADiB,KACLC,EADK,KAQxB,OACI,cAAC,WAAD,UACI,sBAAKd,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,2BAGA,cAAC,EAAD,CAAa/B,YAXC,SAACU,GAClBkC,EAAWE,MAAM,SAAAC,GAAC,OAAIA,IAAMrC,MAC7BmC,EAAc,CAACnC,GAAF,mBAAYkC,QAUrB,qBAAKb,UAAU,aAAf,SAEQa,EAAWpB,KACP,SAAAT,GAAQ,OAEA,cAAC,EAAD,CAEIA,SAAUA,GADLA,c,MCnB7CiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d4c7701.chunk.js","sourcesContent":["import React, {  useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({ setCategory }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        const { value } = e.target;\r\n        setInputValue(value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategory(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (    \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"  \r\n                value={inputValue}\r\n                placeholder=\"Category\"\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=cqDyquoPCZDl2iOHC4dDHzlf80orxefP`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"images__item animate__animated animate__bounce\">\r\n            <h5 className=\"image__title\">\r\n                {title}\r\n            </h5>\r\n            <img src={url} alt={title} className=\"image__source\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, {  } from 'react'\r\nimport { useFetchGifs } from '../../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                {category}\r\n            </h3>\r\n            {loading && <p>Loading</p> }\r\n            <div className=\"images\">\r\n                {\r\n                    images.map(\r\n                        img => \r\n                        (\r\n                            <GifGridItem \r\n                                {...img} \r\n                                key={img.id} \r\n                            />\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../Helpers/Gifs/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({ \r\n                        data: imgs, \r\n                        loading: false \r\n                    }); \r\n                }\r\n            );\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import { Fragment, useState } from \"react\";\r\nimport { CategoryAdd } from \"./Components/Categories/CategoryAdd\";\r\nimport { GifGrid } from \"./Components/Gifs/GifGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch Man'])\r\n\r\n    const handleAddCategory = (value) => {\r\n        if (!categories.find( c => c === value))\r\n            setCategories([value, ...categories]);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <h2 className=\"title\">\r\n                    GiftExpertApp\r\n                </h2>\r\n                <CategoryAdd setCategory={ handleAddCategory } />\r\n                <div className=\"categories\">    \r\n                    {\r\n                        categories.map(\r\n                            category => \r\n                                (\r\n                                    <GifGrid \r\n                                        key={category}\r\n                                        category={category} \r\n                                    />\r\n                                )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}